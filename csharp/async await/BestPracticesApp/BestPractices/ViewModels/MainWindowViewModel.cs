using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;

namespace BestPractices.ViewModels;

// Class needs to be partial to allow use of ObservableProperty
public partial class MainWindowViewModel : ViewModelBase
{
    [ObservableProperty]
    private string _textBlockName = "pp";

    [ObservableProperty] 
    private bool _isPaneOpen;

    [RelayCommand]
    private void TriggerPane()
    {
        IsPaneOpen = !IsPaneOpen;
    }
    // Using ObservableProperty attribute is equivalent to the following code (check out the code generated by the compiler):
    // public string TextBlockName
    // {
    //     get => _textBlockName;
    //     set
    //     {
    //         _textBlockName = value;
    //         OnPropertyChanged(); // This is implemented inside ObservableObject
    //     }
    // }
    
    [RelayCommand]
    private void ButtonOnClick()  // The RelayCommand makes it possible to make this method private
    {
        TextBlockName = "Clicked";
    }
}