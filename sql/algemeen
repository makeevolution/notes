,- het verschil tussen TEXT en VARCHAR en STRING: ```https://stackoverflow.com/questions/25300821/difference-between-varchar-and-text-in-mysql```
- How to drop all tables in a db quickly:
1. SELECT CONCAT('DROP TABLE IF EXISTS `', table_name, '`;') FROM information_schema.tables WHERE table_schema = 'database_name';
2. Copy it to the console, separate them with new lines, dissable FOREIGN_KEY_CHECKS and enable again after dropping. example of copied to run:
SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS auth_group;
DROP TABLE IF EXISTS auth_group_permissions;
SET FOREIGN_KEY_CHECKS = 1;

- When you have constraints between your Django model fields (e.g. field1 and field2 must be unique together in the database), you can have problems with the column size of each field, since the columns now effectively become
foreign keys. MySQL uses utf8md4 and thus store each character as 4 bytes, and an Integer (which is the testcase in this list) is also allocated 4 bytes. Thus the total bytes taken by this index is 256 x 4 x 3 + 4 = 3076 bytes.
MySQL (and other non SQLite databases) have a limit on the maximum bytes that an index key can have; for MySQL case it is 3072 for Dynamic row format (which is what we are provided by IT). Thus it doesn't fit here and raised an error when migration was applied.
More information here: https://dev.mysql.com/doc/refman/8.0/en/create-index.html#create-index-unique.
So always double check; this constraint is not applicable to SQLite so there will be surprises when migrating to MySqL

- When migrating, order of operations is also important! If you have 3072 bytes total and want to reduce to 3000 but first have to increase other field, then it will break!

- By default MySQL collation is case insensitive! Remember your issue with bulk_create; it didn't work because the default collation is utf8mb4_ai_ci (or smth like that), which means the comparison is case insensitive and thus it didn't want to insert sHMB since SHMB already exists!
  More formal info: https://dev.mysql.com/doc/refman/8.0/en/charset-applications.html

- Escape special characters like - in sql queries using ` e.g. `ALTER DATABASE `my-database-name` CHARACTER SET utf8mb4;`
- Show db charset and collation `SELECT @@character_set_database, @@collation_database`, more info `https://stackoverflow.com/questions/5906585/how-to-change-the-character-set-and-collation-throughout-a-database`
